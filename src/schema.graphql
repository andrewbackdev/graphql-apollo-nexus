### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  jwt: String
  user: User
}

type Comment {
  author: User!
  createdAt: DateTime!
  id: Int!
  post: Post!
  text: String!
  updatedAt: DateTime!
}

input CreateCommentInput {
  postId: Int!
  text: String!
}

input CreatePostInput {
  body: String!
  published: Boolean!
  title: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

input CreatedPostInput {
  authorId: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DeleteCommentInput {
  id: Int!
}

input DeletePostInput {
  id: Int!
}

input DeleteUserInput {
  id: Int!
}

input LoginUserInput {
  password: String!
  username: String!
}

type Mutation {
  createComment(data: CreateCommentInput!): Comment
  createPost(data: CreatePostInput!): Post
  createUser(data: CreateUserInput!): AuthPayload!
  deleteComment(data: DeleteCommentInput!): Comment
  deletePost(data: DeletePostInput!): Post
  deleteUser(data: DeleteUserInput!): User!
  login(data: LoginUserInput!): AuthPayload!
  updateComment(data: UpdateCommentInput!): Comment
  updatePost(data: UpdatePostInput!): Post
  updateUser(data: UpdateUserInput!): User!
}

type Post {
  author: User!
  body: String
  createdAt: DateTime!
  id: Int!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type Query {
  comments(after: Int, first: Int, orderBy: Int, skip: Int): [Comment!]!
  me: User!
  myPosts(after: Int, first: Int, orderBy: Int, query: String, skip: Int): [Post!]!
  post(id: Int!): Post!
  posts(after: Int, first: Int, orderBy: Int, query: String, skip: Int): [Post!]!
  users(after: Int, first: Int, orderBy: Int, query: String, skip: Int): [User!]!
}

enum SortOrder {
  asc
  desc
}

input UpdateCommentInput {
  id: Int!
  text: String!
}

input UpdatePostInput {
  body: String
  id: Int!
  published: Boolean
  title: String
}

input UpdateUserInput {
  email: String!
  id: Int!
  password: String!
  username: String!
}

type User {
  comments: [Post!]!
  createdAt: DateTime!
  email: String
  id: Int!
  password: String
  posts: [Post!]!
  updatedAt: DateTime!
  username: String!
}